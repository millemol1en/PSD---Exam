// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)

open Absyn

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10

# 19 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | QMARK
  | COLON
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | PREINC
  | PREDEC
  | PLUSEQ
  | MINUSEQ
  | TIMESEQ
  | DIVEQ
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | SWITCH
  | CASE
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_QMARK
    | TOKEN_COLON
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_PREINC
    | TOKEN_PREDEC
    | TOKEN_PLUSEQ
    | TOKEN_MINUSEQ
    | TOKEN_TIMESEQ
    | TOKEN_DIVEQ
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_Case
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | QMARK  -> 14 
  | COLON  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | PREINC  -> 27 
  | PREDEC  -> 28 
  | PLUSEQ  -> 29 
  | MINUSEQ  -> 30 
  | TIMESEQ  -> 31 
  | DIVEQ  -> 32 
  | CHAR  -> 33 
  | ELSE  -> 34 
  | IF  -> 35 
  | INT  -> 36 
  | NULL  -> 37 
  | PRINT  -> 38 
  | PRINTLN  -> 39 
  | RETURN  -> 40 
  | VOID  -> 41 
  | WHILE  -> 42 
  | FOR  -> 43 
  | SWITCH  -> 44 
  | CASE  -> 45 
  | CSTSTRING _ -> 46 
  | NAME _ -> 47 
  | CSTINT _ -> 48 
  | CSTBOOL _ -> 49 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_QMARK 
  | 15 -> TOKEN_COLON 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_PREINC 
  | 28 -> TOKEN_PREDEC 
  | 29 -> TOKEN_PLUSEQ 
  | 30 -> TOKEN_MINUSEQ 
  | 31 -> TOKEN_TIMESEQ 
  | 32 -> TOKEN_DIVEQ 
  | 33 -> TOKEN_CHAR 
  | 34 -> TOKEN_ELSE 
  | 35 -> TOKEN_IF 
  | 36 -> TOKEN_INT 
  | 37 -> TOKEN_NULL 
  | 38 -> TOKEN_PRINT 
  | 39 -> TOKEN_PRINTLN 
  | 40 -> TOKEN_RETURN 
  | 41 -> TOKEN_VOID 
  | 42 -> TOKEN_WHILE 
  | 43 -> TOKEN_FOR 
  | 44 -> TOKEN_SWITCH 
  | 45 -> TOKEN_CASE 
  | 46 -> TOKEN_CSTSTRING 
  | 47 -> TOKEN_NAME 
  | 48 -> TOKEN_CSTINT 
  | 49 -> TOKEN_CSTBOOL 
  | 52 -> TOKEN_end_of_input
  | 50 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtU 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_Expr 
    | 36 -> NONTERM_Expr 
    | 37 -> NONTERM_ExprNotAccess 
    | 38 -> NONTERM_ExprNotAccess 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_Case 
    | 64 -> NONTERM_Case 
    | 65 -> NONTERM_AtExprNotAccess 
    | 66 -> NONTERM_AtExprNotAccess 
    | 67 -> NONTERM_AtExprNotAccess 
    | 68 -> NONTERM_Access 
    | 69 -> NONTERM_Access 
    | 70 -> NONTERM_Access 
    | 71 -> NONTERM_Access 
    | 72 -> NONTERM_Access 
    | 73 -> NONTERM_Exprs 
    | 74 -> NONTERM_Exprs 
    | 75 -> NONTERM_Exprs1 
    | 76 -> NONTERM_Exprs1 
    | 77 -> NONTERM_Const 
    | 78 -> NONTERM_Const 
    | 79 -> NONTERM_Const 
    | 80 -> NONTERM_Const 
    | 81 -> NONTERM_Type 
    | 82 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 52 
let _fsyacc_tagOfErrorTerminal = 50

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | QMARK  -> "QMARK" 
  | COLON  -> "COLON" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | PREINC  -> "PREINC" 
  | PREDEC  -> "PREDEC" 
  | PLUSEQ  -> "PLUSEQ" 
  | MINUSEQ  -> "MINUSEQ" 
  | TIMESEQ  -> "TIMESEQ" 
  | DIVEQ  -> "DIVEQ" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | PREINC  -> (null : System.Object) 
  | PREDEC  -> (null : System.Object) 
  | PLUSEQ  -> (null : System.Object) 
  | MINUSEQ  -> (null : System.Object) 
  | TIMESEQ  -> (null : System.Object) 
  | DIVEQ  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;2us;65535us;0us;2us;4us;5us;2us;65535us;0us;4us;4us;4us;8us;65535us;0us;6us;4us;6us;25us;34us;29us;34us;35us;34us;37us;42us;40us;42us;43us;42us;4us;65535us;9us;11us;10us;11us;14us;15us;16us;17us;2us;65535us;0us;8us;4us;8us;2us;65535us;25us;26us;29us;30us;3us;65535us;25us;33us;29us;33us;35us;36us;13us;65535us;27us;28us;31us;32us;37us;54us;40us;54us;43us;54us;61us;54us;62us;54us;64us;54us;65us;54us;73us;54us;74us;54us;83us;54us;158us;159us;3us;65535us;37us;38us;40us;41us;43us;44us;4us;65535us;37us;40us;40us;40us;43us;40us;62us;93us;10us;65535us;37us;45us;40us;45us;43us;45us;61us;63us;62us;46us;64us;66us;65us;66us;73us;75us;74us;75us;83us;84us;6us;65535us;37us;47us;40us;47us;43us;47us;62us;47us;65us;92us;74us;94us;45us;65535us;37us;48us;40us;48us;43us;48us;50us;52us;57us;60us;58us;59us;61us;48us;62us;48us;64us;48us;65us;48us;69us;72us;70us;71us;73us;48us;74us;48us;77us;78us;79us;80us;81us;82us;83us;48us;86us;87us;100us;101us;103us;132us;106us;107us;108us;109us;133us;111us;134us;112us;135us;113us;136us;114us;137us;115us;138us;116us;139us;117us;140us;118us;141us;119us;142us;120us;143us;121us;144us;122us;145us;123us;146us;124us;147us;125us;148us;126us;149us;127us;154us;129us;155us;130us;162us;128us;173us;131us;176us;132us;45us;65535us;37us;97us;40us;97us;43us;97us;50us;97us;57us;97us;58us;97us;61us;97us;62us;97us;64us;97us;65us;97us;69us;97us;70us;97us;73us;97us;74us;97us;77us;97us;79us;97us;81us;97us;83us;97us;86us;97us;100us;97us;103us;97us;106us;97us;108us;97us;133us;97us;134us;97us;135us;97us;136us;97us;137us;97us;138us;97us;139us;97us;140us;97us;141us;97us;142us;97us;143us;97us;144us;97us;145us;97us;146us;97us;147us;97us;148us;97us;149us;97us;154us;97us;155us;97us;162us;98us;173us;97us;176us;97us;2us;65535us;89us;90us;159us;160us;46us;65535us;37us;99us;40us;99us;43us;99us;50us;99us;57us;99us;58us;99us;61us;99us;62us;99us;64us;99us;65us;99us;69us;99us;70us;99us;73us;99us;74us;99us;77us;99us;79us;99us;81us;99us;83us;99us;86us;99us;100us;99us;103us;99us;106us;99us;108us;99us;133us;99us;134us;99us;135us;99us;136us;99us;137us;99us;138us;99us;139us;99us;140us;99us;141us;99us;142us;99us;143us;99us;144us;99us;145us;99us;146us;99us;147us;99us;148us;99us;149us;99us;154us;99us;155us;99us;162us;99us;170us;172us;173us;99us;176us;99us;50us;65535us;37us;96us;40us;96us;43us;96us;50us;96us;57us;96us;58us;96us;61us;96us;62us;96us;64us;96us;65us;96us;69us;96us;70us;96us;73us;96us;74us;96us;77us;96us;79us;96us;81us;96us;83us;96us;86us;96us;100us;96us;103us;96us;106us;96us;108us;96us;133us;96us;134us;96us;135us;96us;136us;96us;137us;96us;138us;96us;139us;96us;140us;96us;141us;96us;142us;96us;143us;96us;144us;96us;145us;96us;146us;96us;147us;96us;148us;96us;149us;96us;150us;151us;152us;153us;154us;96us;155us;96us;162us;95us;164us;165us;167us;168us;170us;171us;173us;96us;176us;96us;1us;65535us;103us;104us;2us;65535us;103us;175us;176us;177us;46us;65535us;37us;161us;40us;161us;43us;161us;50us;161us;57us;161us;58us;161us;61us;161us;62us;161us;64us;161us;65us;161us;69us;161us;70us;161us;73us;161us;74us;161us;77us;161us;79us;161us;81us;161us;83us;161us;86us;161us;100us;161us;103us;161us;106us;161us;108us;161us;133us;161us;134us;161us;135us;161us;136us;161us;137us;161us;138us;161us;139us;161us;140us;161us;141us;161us;142us;161us;143us;161us;144us;161us;145us;161us;146us;161us;147us;161us;148us;161us;149us;161us;154us;161us;155us;161us;162us;161us;170us;161us;173us;161us;176us;161us;8us;65535us;0us;10us;4us;10us;25us;9us;29us;9us;35us;9us;37us;9us;40us;9us;43us;9us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;6us;9us;18us;23us;26us;29us;33us;47us;51us;56us;67us;74us;120us;166us;169us;216us;267us;269us;272us;319us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;3us;1us;3us;1us;4us;1us;4us;1us;5us;1us;6us;2us;6us;13us;3us;6us;10us;11us;1us;7us;2us;7us;13us;1us;8us;3us;8us;10us;11us;1us;9us;3us;9us;10us;11us;1us;9us;2us;10us;11us;1us;10us;1us;11us;1us;11us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;13us;1us;13us;1us;13us;1us;13us;1us;15us;2us;16us;17us;1us;17us;1us;17us;1us;18us;1us;18us;1us;18us;1us;20us;1us;20us;1us;21us;1us;21us;1us;21us;1us;22us;3us;22us;28us;32us;1us;23us;15us;24us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;1us;24us;2us;25us;26us;1us;25us;15us;26us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;1us;26us;1us;27us;1us;28us;3us;28us;32us;33us;1us;28us;3us;28us;32us;33us;17us;28us;32us;33us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;15us;28us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;1us;28us;3us;28us;32us;33us;1us;28us;1us;28us;2us;28us;32us;1us;28us;1us;29us;2us;29us;34us;1us;29us;2us;29us;34us;16us;29us;34us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;15us;29us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;1us;29us;2us;29us;34us;1us;29us;1us;30us;1us;30us;15us;30us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;1us;30us;15us;30us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;1us;30us;15us;30us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;1us;30us;1us;30us;1us;31us;1us;31us;15us;31us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;1us;31us;1us;31us;1us;31us;1us;31us;1us;32us;1us;33us;1us;34us;8us;35us;38us;54us;55us;56us;57us;69us;72us;7us;35us;38us;54us;55us;56us;57us;72us;1us;36us;2us;36us;66us;1us;37us;1us;38us;15us;38us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;2us;39us;68us;1us;39us;1us;39us;1us;39us;1us;40us;15us;40us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;1us;41us;15us;41us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;1us;42us;15us;43us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;15us;43us;44us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;15us;43us;44us;45us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;15us;43us;44us;45us;46us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;15us;43us;44us;45us;46us;47us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;48us;49us;50us;51us;52us;53us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;49us;50us;51us;52us;53us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;50us;51us;52us;53us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;51us;52us;53us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;52us;53us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;53us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;55us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;56us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;57us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;59us;62us;14us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;62us;15us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;72us;16us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;58us;59us;62us;75us;76us;1us;43us;1us;44us;1us;45us;1us;46us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;1us;52us;1us;53us;1us;54us;1us;55us;1us;56us;1us;57us;1us;58us;1us;59us;1us;60us;2us;60us;72us;1us;61us;2us;61us;72us;1us;62us;1us;62us;1us;64us;1us;64us;1us;64us;1us;64us;1us;64us;1us;65us;2us;66us;69us;1us;66us;1us;67us;2us;67us;72us;1us;68us;1us;69us;2us;69us;72us;1us;69us;2us;70us;71us;2us;70us;72us;1us;71us;1us;72us;1us;72us;1us;74us;1us;76us;1us;76us;1us;77us;1us;78us;1us;79us;1us;79us;1us;80us;1us;81us;1us;82us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;18us;20us;23us;27us;29us;32us;34us;38us;40us;44us;46us;49us;51us;53us;55us;57us;59us;61us;63us;65us;67us;69us;71us;73us;75us;77us;80us;82us;84us;86us;88us;90us;92us;94us;96us;98us;100us;102us;106us;108us;124us;126us;129us;131us;147us;149us;151us;153us;157us;159us;163us;181us;197us;199us;203us;205us;207us;210us;212us;214us;217us;219us;222us;239us;255us;257us;260us;262us;264us;266us;282us;284us;300us;302us;318us;320us;322us;324us;326us;342us;344us;346us;348us;350us;352us;354us;356us;365us;373us;375us;378us;380us;382us;398us;401us;403us;405us;407us;409us;425us;427us;443us;445us;461us;477us;493us;509us;525us;541us;557us;573us;589us;605us;621us;637us;653us;669us;685us;701us;717us;732us;748us;764us;780us;797us;799us;801us;803us;805us;807us;809us;811us;813us;815us;817us;819us;821us;823us;825us;827us;829us;831us;833us;836us;838us;841us;843us;845us;847us;849us;851us;853us;855us;857us;860us;862us;864us;867us;869us;871us;874us;876us;879us;882us;884us;886us;888us;890us;892us;894us;896us;898us;900us;902us;904us;906us;|]
let _fsyacc_action_rows = 185
let _fsyacc_actionTableElements = [|3us;16386us;33us;184us;36us;183us;41us;23us;0us;49152us;1us;32768us;0us;3us;0us;16385us;3us;16386us;33us;184us;36us;183us;41us;23us;0us;16387us;1us;32768us;7us;7us;0us;16388us;0us;16389us;3us;32768us;1us;16us;24us;14us;47us;12us;3us;32768us;1us;16us;24us;14us;47us;13us;1us;16390us;5us;19us;0us;16391us;1us;16391us;1us;29us;3us;32768us;1us;16us;24us;14us;47us;12us;1us;16392us;5us;19us;3us;32768us;1us;16us;24us;14us;47us;12us;2us;32768us;2us;18us;5us;19us;0us;16393us;2us;32768us;6us;20us;48us;21us;0us;16394us;1us;32768us;6us;22us;0us;16395us;1us;32768us;47us;24us;1us;32768us;1us;25us;2us;16398us;33us;184us;36us;183us;1us;32768us;2us;27us;1us;32768us;3us;37us;0us;16396us;2us;16398us;33us;184us;36us;183us;1us;32768us;2us;31us;1us;32768us;3us;37us;0us;16397us;0us;16399us;1us;16400us;8us;35us;2us;32768us;33us;184us;36us;183us;0us;16401us;21us;16403us;1us;162us;3us;37us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;33us;184us;35us;56us;36us;183us;37us;182us;38us;108us;39us;110us;40us;50us;42us;68us;43us;76us;44us;85us;47us;102us;48us;178us;49us;179us;1us;32768us;4us;39us;0us;16402us;21us;16403us;1us;162us;3us;37us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;33us;184us;35us;56us;36us;183us;37us;182us;38us;108us;39us;110us;40us;50us;42us;68us;43us;76us;44us;85us;47us;102us;48us;178us;49us;179us;0us;16404us;1us;32768us;7us;43us;21us;16403us;1us;162us;3us;37us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;33us;184us;35us;56us;36us;183us;37us;182us;38us;108us;39us;110us;40us;50us;42us;68us;43us;76us;44us;85us;47us;102us;48us;178us;49us;179us;0us;16405us;0us;16406us;1us;16406us;34us;65us;0us;16407us;15us;32768us;7us;49us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;0us;16408us;14us;32768us;1us;162us;7us;51us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;0us;16409us;15us;32768us;7us;53us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;0us;16410us;0us;16411us;1us;32768us;1us;57us;1us;32768us;1us;58us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;15us;32768us;2us;62us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;15us;32768us;2us;61us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;19us;32768us;1us;162us;3us;37us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;35us;55us;37us;182us;38us;108us;39us;110us;40us;50us;42us;67us;43us;76us;44us;85us;47us;102us;48us;178us;49us;179us;19us;32768us;1us;162us;3us;37us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;35us;56us;37us;182us;38us;108us;39us;110us;40us;50us;42us;68us;43us;76us;44us;85us;47us;102us;48us;178us;49us;179us;1us;32768us;34us;64us;19us;32768us;1us;162us;3us;37us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;35us;55us;37us;182us;38us;108us;39us;110us;40us;50us;42us;67us;43us;76us;44us;85us;47us;102us;48us;178us;49us;179us;19us;32768us;1us;162us;3us;37us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;35us;56us;37us;182us;38us;108us;39us;110us;40us;50us;42us;68us;43us;76us;44us;85us;47us;102us;48us;178us;49us;179us;0us;16412us;1us;32768us;1us;69us;1us;32768us;1us;70us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;15us;32768us;2us;74us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;15us;32768us;2us;73us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;19us;32768us;1us;162us;3us;37us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;35us;55us;37us;182us;38us;108us;39us;110us;40us;50us;42us;67us;43us;76us;44us;85us;47us;102us;48us;178us;49us;179us;19us;32768us;1us;162us;3us;37us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;35us;56us;37us;182us;38us;108us;39us;110us;40us;50us;42us;68us;43us;76us;44us;85us;47us;102us;48us;178us;49us;179us;0us;16413us;1us;32768us;1us;77us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;15us;32768us;7us;79us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;15us;32768us;7us;81us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;15us;32768us;2us;83us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;19us;32768us;1us;162us;3us;37us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;35us;55us;37us;182us;38us;108us;39us;110us;40us;50us;42us;67us;43us;76us;44us;85us;47us;102us;48us;178us;49us;179us;0us;16414us;1us;32768us;1us;86us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;15us;32768us;2us;88us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;1us;32768us;3us;89us;1us;16447us;45us;156us;1us;32768us;4us;91us;0us;16415us;0us;16416us;0us;16417us;0us;16418us;7us;16419us;2us;169us;5us;173us;9us;100us;29us;144us;30us;145us;31us;146us;32us;147us;6us;16419us;5us;173us;9us;100us;29us;144us;30us;145us;31us;146us;32us;147us;0us;16420us;1us;16420us;2us;163us;0us;16421us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;14us;16422us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;1us;16452us;1us;103us;13us;16457us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;1us;32768us;2us;105us;0us;16423us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;0us;16424us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;14us;16425us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;0us;16426us;0us;16427us;0us;16428us;0us;16429us;0us;16430us;0us;16431us;9us;16432us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;9us;16433us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;5us;16434us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;5us;16435us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;5us;16436us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;5us;16437us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;0us;16438us;0us;16439us;0us;16440us;0us;16441us;11us;16442us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;12us;16443us;13us;148us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;14us;32768us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;15us;32768us;12us;149us;13us;148us;14us;154us;15us;155us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;14us;16446us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;15us;32768us;6us;174us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;15us;16459us;8us;176us;12us;149us;13us;148us;14us;154us;16us;138us;17us;139us;18us;140us;19us;141us;20us;142us;21us;143us;22us;133us;23us;134us;24us;135us;25us;136us;26us;137us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;3us;32768us;1us;167us;24us;170us;47us;166us;1us;16444us;5us;173us;3us;32768us;1us;167us;24us;170us;47us;166us;1us;16445us;5us;173us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;1us;32768us;48us;157us;1us;32768us;15us;158us;1us;32768us;3us;37us;1us;16447us;45us;156us;0us;16448us;0us;16449us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;0us;16450us;3us;32768us;1us;167us;24us;170us;47us;166us;1us;16451us;5us;173us;0us;16452us;3us;32768us;1us;167us;24us;170us;47us;166us;2us;32768us;2us;169us;5us;173us;0us;16453us;8us;32768us;1us;162us;10us;164us;23us;180us;24us;170us;37us;182us;47us;166us;48us;178us;49us;179us;1us;16454us;5us;173us;0us;16455us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;0us;16456us;0us;16458us;13us;32768us;1us;162us;10us;164us;11us;106us;23us;180us;24us;170us;27us;150us;28us;152us;37us;182us;38us;108us;39us;110us;47us;102us;48us;178us;49us;179us;0us;16460us;0us;16461us;0us;16462us;1us;32768us;48us;181us;0us;16463us;0us;16464us;0us;16465us;0us;16466us;|]
let _fsyacc_actionTableRowOffsets = [|0us;4us;5us;7us;8us;12us;13us;15us;16us;17us;21us;25us;27us;28us;30us;34us;36us;40us;43us;44us;47us;48us;50us;51us;53us;55us;58us;60us;62us;63us;66us;68us;70us;71us;72us;74us;77us;78us;100us;102us;103us;125us;126us;128us;150us;151us;152us;154us;155us;171us;172us;187us;188us;204us;205us;206us;208us;210us;224us;238us;254us;270us;290us;310us;312us;332us;352us;353us;355us;357us;371us;385us;401us;417us;437us;457us;458us;460us;474us;490us;504us;520us;534us;550us;570us;571us;573us;587us;603us;605us;607us;609us;610us;611us;612us;613us;621us;628us;629us;631us;632us;646us;661us;663us;677us;679us;680us;694us;695us;709us;724us;725us;726us;727us;728us;729us;730us;740us;750us;756us;762us;768us;774us;775us;776us;777us;778us;790us;803us;818us;834us;849us;865us;881us;895us;909us;923us;937us;951us;965us;979us;993us;1007us;1021us;1035us;1049us;1063us;1077us;1091us;1105us;1119us;1123us;1125us;1129us;1131us;1145us;1159us;1161us;1163us;1165us;1167us;1168us;1169us;1183us;1184us;1188us;1190us;1191us;1195us;1198us;1199us;1208us;1210us;1211us;1225us;1226us;1227us;1241us;1242us;1243us;1244us;1246us;1247us;1248us;1249us;|]
let _fsyacc_reductionSymbolCounts = [|1us;2us;0us;2us;2us;1us;2us;1us;2us;3us;3us;4us;6us;6us;0us;1us;1us;3us;3us;0us;2us;3us;1us;1us;2us;2us;3us;1us;7us;5us;9us;7us;7us;5us;5us;1us;1us;1us;3us;4us;2us;2us;1us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;2us;2us;5us;0us;5us;1us;3us;2us;1us;3us;2us;2us;4us;0us;1us;1us;3us;1us;1us;2us;1us;1us;1us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;3us;3us;4us;5us;5us;5us;5us;5us;6us;6us;7us;7us;8us;8us;9us;10us;10us;10us;11us;11us;12us;12us;12us;12us;12us;12us;12us;12us;13us;13us;13us;14us;14us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;16us;16us;17us;17us;17us;18us;18us;18us;18us;18us;19us;19us;20us;20us;21us;21us;21us;21us;22us;22us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16385us;65535us;16387us;65535us;16388us;16389us;65535us;65535us;65535us;16391us;65535us;65535us;65535us;65535us;65535us;16393us;65535us;16394us;65535us;16395us;65535us;65535us;65535us;65535us;65535us;16396us;65535us;65535us;65535us;16397us;16399us;65535us;65535us;16401us;65535us;65535us;16402us;65535us;16404us;65535us;65535us;16405us;16406us;65535us;16407us;65535us;16408us;65535us;16409us;65535us;16410us;16411us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16412us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16413us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16414us;65535us;65535us;65535us;65535us;65535us;65535us;16415us;16416us;16417us;16418us;65535us;65535us;16420us;65535us;16421us;65535us;65535us;65535us;65535us;65535us;16423us;65535us;65535us;65535us;65535us;16426us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16448us;16449us;65535us;16450us;65535us;65535us;16452us;65535us;65535us;16453us;65535us;65535us;16455us;65535us;16456us;16458us;65535us;16460us;16461us;16462us;65535us;16463us;16464us;16465us;16466us;|]
let _fsyacc_reductions = lazy [|
# 472 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 481 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 43 "CPar.fsy"
                                                               Prog _1 
                   )
# 43 "CPar.fsy"
                 : Absyn.program));
# 492 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "CPar.fsy"
                                                               [] 
                   )
# 47 "CPar.fsy"
                 : 'gentype_Topdecs));
# 502 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 48 "CPar.fsy"
                 : 'gentype_Topdecs));
# 514 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 52 "CPar.fsy"
                 : 'gentype_Topdec));
# 525 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "CPar.fsy"
                                                               _1 
                   )
# 53 "CPar.fsy"
                 : 'gentype_Topdec));
# 536 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Vardec));
# 548 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 61 "CPar.fsy"
                 : 'gentype_Vardesc));
# 559 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 62 "CPar.fsy"
                 : 'gentype_Vardesc));
# 570 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               _2                                      
                   )
# 63 "CPar.fsy"
                 : 'gentype_Vardesc));
# 581 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 64 "CPar.fsy"
                 : 'gentype_Vardesc));
# 592 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 65 "CPar.fsy"
                 : 'gentype_Vardesc));
# 604 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 69 "CPar.fsy"
                 : 'gentype_Fundec));
# 617 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 70 "CPar.fsy"
                 : 'gentype_Fundec));
# 631 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "CPar.fsy"
                                                               [] 
                   )
# 74 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 641 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "CPar.fsy"
                                                               _1 
                   )
# 75 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 652 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "CPar.fsy"
                                                               [_1]     
                   )
# 79 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 663 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 80 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 675 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "CPar.fsy"
                                                               Block _2 
                   )
# 84 "CPar.fsy"
                 : 'gentype_Block));
# 686 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "CPar.fsy"
                                                               [] 
                   )
# 88 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 696 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 89 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 708 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 90 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 720 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "CPar.fsy"
                                                               _1 
                   )
# 94 "CPar.fsy"
                 : 'gentype_Stmt));
# 731 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CPar.fsy"
                                                               _1 
                   )
# 95 "CPar.fsy"
                 : 'gentype_Stmt));
# 742 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 99 "CPar.fsy"
                 : 'gentype_StmtM));
# 753 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               Return None          
                   )
# 100 "CPar.fsy"
                 : 'gentype_StmtM));
# 763 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 101 "CPar.fsy"
                 : 'gentype_StmtM));
# 774 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               _1                   
                   )
# 102 "CPar.fsy"
                 : 'gentype_StmtM));
# 785 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 103 "CPar.fsy"
                 : 'gentype_StmtM));
# 798 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 104 "CPar.fsy"
                 : 'gentype_StmtM));
# 810 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                                        Block [ Stmt(Expr(_3)); Stmt (While(_5, Block [Stmt(_9); Stmt(Expr(_7))]))] 
                   )
# 105 "CPar.fsy"
                 : 'gentype_StmtM));
# 824 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_Case in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                                    Switch(_3, _6) 
                   )
# 106 "CPar.fsy"
                 : 'gentype_StmtM));
# 836 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 110 "CPar.fsy"
                 : 'gentype_StmtU));
# 849 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 111 "CPar.fsy"
                 : 'gentype_StmtU));
# 861 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 112 "CPar.fsy"
                 : 'gentype_StmtU));
# 873 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               Access _1           
                   )
# 116 "CPar.fsy"
                 : 'gentype_Expr));
# 884 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               _1                  
                   )
# 117 "CPar.fsy"
                 : 'gentype_Expr));
# 895 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               _1                  
                   )
# 121 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 906 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 122 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 918 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 123 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 930 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 124 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 941 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 125 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 952 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 126 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 962 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 127 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 974 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 128 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 986 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 129 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 998 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 130 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1010 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 131 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1022 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 132 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1034 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 133 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1046 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 134 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1058 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 135 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1070 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 136 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1082 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 137 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1094 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               OpEq("+=", _1, _3)  
                   )
# 138 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1106 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               OpEq("-=", _1, _3)  
                   )
# 139 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1118 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               OpEq("*=", _1, _3)  
                   )
# 140 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1130 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               OpEq("/=", _1, _3)  
                   )
# 141 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1142 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 142 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1154 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 143 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1166 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               PreInc(_2)          
                   )
# 144 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1177 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               PreDec(_2)          
                   )
# 145 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1188 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               Cond(_1, _3, _5)    
                   )
# 146 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1201 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               [] 
                   )
# 150 "CPar.fsy"
                 : 'gentype_Case));
# 1211 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            let _4 = parseState.GetInput(4) :?> 'gentype_Block in
            let _5 = parseState.GetInput(5) :?> 'gentype_Case in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               (_2, _4) :: _5      
                   )
# 151 "CPar.fsy"
                 : 'gentype_Case));
# 1224 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               CstI _1             
                   )
# 154 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1235 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               _2                  
                   )
# 155 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1246 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               Addr _2             
                   )
# 156 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1257 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               AccVar _1           
                   )
# 160 "CPar.fsy"
                 : 'gentype_Access));
# 1268 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               _2                  
                   )
# 161 "CPar.fsy"
                 : 'gentype_Access));
# 1279 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 162 "CPar.fsy"
                 : 'gentype_Access));
# 1290 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 163 "CPar.fsy"
                 : 'gentype_Access));
# 1301 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 164 "CPar.fsy"
                 : 'gentype_Access));
# 1313 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               []       
                   )
# 168 "CPar.fsy"
                 : 'gentype_Exprs));
# 1323 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               _1       
                   )
# 169 "CPar.fsy"
                 : 'gentype_Exprs));
# 1334 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               [_1]     
                   )
# 173 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1345 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 174 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1357 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               _1       
                   )
# 178 "CPar.fsy"
                 : 'gentype_Const));
# 1368 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               _1       
                   )
# 179 "CPar.fsy"
                 : 'gentype_Const));
# 1379 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               - _2     
                   )
# 180 "CPar.fsy"
                 : 'gentype_Const));
# 1390 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               -1       
                   )
# 181 "CPar.fsy"
                 : 'gentype_Const));
# 1400 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               TypI     
                   )
# 185 "CPar.fsy"
                 : 'gentype_Type));
# 1410 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               TypC     
                   )
# 186 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1421 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 53;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
